Potential queries for final project:

1. List all athletes in the club (in athlete.php table#2 and table#3)
2. list all coaches in the club
3. list all teams in the club
4. list athletes anc coaches in a specific team (in table1/2/3 in positions.php)
4. list athletes in a certain age range
5. list athletes where not in a team
6. add athlete
7. add athlete to team  --When you add athlete make is so you have to add to team? (no, cause athletes will be added at tryouts, before they have a team.
8. add coach
9. add coach to team  --When you add coach make is so you have to add to team? (no, you don't know their team when you hire them)
10. update athlete information
11. update team information
12. update coach information
13. update team information
14. display count of athletes on team
15. display count of athletes in club
16. list athletes where on a team above their actual age (playing up)



-- COACHES.PHP QUERIES --
1. SELECT id, first_name, last_name FROM coaches ORDER BY last_name
2. SELECT coaches.first_name, coaches.last_name, teams.name, teams.age_group, teams.level, positions.type
FROM coaches LEFT JOIN position_coach_team ON position_coach_team.coachID = coaches.id
LEFT JOIN positions ON positions.id = position_coach_team.positionID
LEFT JOIN teams ON position_coach_team.teamID = teams.id
ORDER BY teams.age_group DESC

-- ADD_UP_COACH.PHP --
1. UPDATE coaches SET first_name=?, last_name=? WHERE id=?
2. INSERT INTO `coaches` (`first_name`,`last_name`) VALUES (?,?)

-- TEAMS.PHP --
1. SELECT teams.name, teams.age_group, teams.level,  COUNT(athletes.id) AS players FROM teams
LEFT JOIN athletes ON athletes.teamID = teams.id
GROUP BY teams.name
ORDER BY teams.age_group DESC, teams.level ASC

-- ADD_UP_TEAM.PHP --
1. UPDATE teams SET name=?, age_group=?, level=? WHERE id=?
2. INSERT INTO `teams` (`name`,`age_group`, `level`) VALUES (?,?,?)

2. SELECT id, name, age_group, level FROM teams ORDER BY age_group DESC, level ASC
-- ATHLETES.PHP QUERIES --

1. Selects althete: first name + last name + age, team: name

SELECT a.first_name, a.last_name, a.age, t.name FROM athletes a INNER JOIN teams t ON a.teamID = t.id ORDER BY t.name,a.last_name

2. All positions held by all athlete (even if empty).

SELECT a.first_name, a.last_name, t.name, p.type FROM athletes a Left JOIN athlete_position ap ON
ap.athleteID = a.id Left JOIN positions p ON
p.id = ap.positionID Left Join teams t ON a.teamID=t.id Order By t.name asc, a.last_name

3.  DROP DOWN LIST: --Athlete's Team--

SELECT id, name FROM teams



 -- ADD_UP+ATHLETE.PHP QUERIES --
1.  Inserts new athlete into athletes table by first name, last name , age , and team ID

INSERT INTO `athletes` (`first_name`,`last_name`,`age`,`teamID`) VALUES (?,?,?,?)

2.  Updates team and age based on user input first name and last name combination

UPDATE athletes SET teamID=?, age=? WHERE first_name=?  AND last_name=?


-- POSITIONS.PHP QUERIES --

1. Coach positions and team by position type

SELECT c.first_name, c.last_name, t.name, p.type FROM coaches c Left Join position_coach_team pct ON
pct.coachID = c.id Left Join teams t on t.id = pct.teamID Left Join positions p ON p.id=pct.positionID Order By p.type desc, t.name

2. (Same as athlete #2 query)... All positions held by all athlete (even if empty).

SELECT a.first_name, a.last_name, t.name, p.type FROM athletes a Left JOIN athlete_position ap ON
ap.athleteID = a.id Left JOIN positions p ON
p.id = ap.positionID Left Join teams t ON a.teamID=t.id Order By t.name asc, a.last_name

3.  DROP DOWN LIST: --Coach's Positions--

SELECT id, type FROM positions WHERE positions.type = 'Head Coach' OR positions.type = 'Assistant Coach'

4.  DROP DOWN LIST: --Athlete's Positions--
SELECT id, type FROM positions WHERE type NOT IN ('Head Coach','Assistant Coach')

5. Number of positions held by an athlete

SELECT a.first_name, a.last_name, COUNT(p.type) AS Positions_Held FROM athletes a LEFT JOIN teams t ON a.teamID = t.id LEFT JOIN
athlete_position ap ON ap.athleteID = a.id LEFT JOIN
positions p ON p.id = ap.positionID
GROUP BY a.first_name, a.last_name ORDER BY a.last_name asc



-- ADD_UP_POSITIONS.PHP QUERIES --

1. Adding a coach position ("Add Coach Position" Button)

 	a. SELECT id FROM coaches WHERE first_name =[$fname] AND last_name=[$lname];
 	b. INSERT INTO `position_coach_team` (`coachID`,`positionID`,`teamID`) VALUES (?,?,?);





------------------------------------------------------------------------
-- Some queries I have ran already/tested, not implemented.


1. (Used to be on athlete page) Selects althete: first name + last name + age, team: name + age_group, COUNTS how many positions held.  Note: uses aggregate function

SELECT a.first_name, a.last_name, a.age, t.name, t.age_group, COUNT(p.type) AS Positions_Held FROM athletes a INNER JOIN teams t ON a.teamID = t.id INNER JOIN
athlete_position ap ON ap.athleteID = a.id INNER JOIN
positions p ON p.id = ap.positionID
GROUP BY a.first_name, a.last_name, a.age, t.name, t.age_group
